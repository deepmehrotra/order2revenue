<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd ">

<!-- <bean id="mailProperties"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
 
    <property name="location" value="classpath*:database.properties" />
 
</bean> -->
	 <context:property-placeholder location="classpath*:database.properties" />
	<context:component-scan base-package="com.o2r" />
<context:annotation-config/>

    <mvc:annotation-driven />
	<tx:annotation-driven transaction-manager="hibernateTransactionManager"/>

	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${database.driver}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.user}" />
		<property name="password" value="${database.password}" />
	</bean>
	
	<bean id="dataConfig" class="com.o2r.bean.DataConfig">
		<property name="serviceTax" value="${serviceTax}" />
		<property name="uploadReportPath" value="${uploadreport.path}" />
		<property name="payuMerchantKey" value="${payuMerchantKey}" />
		<property name="payuSalt" value="${payuSalt}" />
		<property name="payubaseurl" value="${payubaseurl}" />
		<property name="successurl" value="${successurl}" />
		<property name="failurl" value="${failurl}" />
		<!-- <property name="xlsPath" value="${xlsPath}" /> -->
	</bean>

<bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.o2r.model.GenericQuery</value>
				<value>com.o2r.model.Customer</value>
				<value>com.o2r.model.Order</value>
				<value>com.o2r.model.Partner</value>
				<value>com.o2r.model.Product</value>
				<value>com.o2r.model.Seller</value>
				<value>com.o2r.model.Role</value>
				<value>com.o2r.model.Category</value>
				<value>com.o2r.model.Expenses</value>
				<value>com.o2r.model.ExpenseCategory</value>
				<value>com.o2r.model.OrderPayment</value>
				<value>com.o2r.model.OrderRTOorReturn</value>
				<value>com.o2r.model.OrderTax</value>
				<value>com.o2r.model.PaymentUpload</value>
				<value>com.o2r.model.TaxDetail</value>
				<value>com.o2r.model.ManualCharges</value>
				<value>com.o2r.model.OrderTimeline</value>
				<value>com.o2r.model.TaxCategory</value>
				<value>com.o2r.model.ProductStockList</value>
				<value>com.o2r.model.AccountTransaction</value>
				<value>com.o2r.model.SellerAccount</value>
				<value>com.o2r.model.Plan</value>
				<value>com.o2r.model.NRnReturnCharges</value>
				<value>com.o2r.model.NRnReturnConfig</value>
				<value>com.o2r.model.State</value>
				<value>com.o2r.model.StateDeliveryTime</value>
				<value>com.o2r.model.Events</value>
				<value>com.o2r.model.ProductConfig</value>
				<value>com.o2r.model.GatePass</value>
				<value>com.o2r.model.UploadReport</value>
				<value>com.o2r.model.MetaPartner</value>
				<value>com.o2r.model.MetaNRnReturnCharges</value>
				<value>com.o2r.model.MetaNRnReturnConfig</value>
				<value>com.o2r.model.ChannelUploadMapping</value>
				<value>com.o2r.model.ColumMap</value>
				<value>com.o2r.model.SellerAlerts</value>
				<value>com.o2r.model.PaymentVariables</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>				
			</props>
		</property>
	</bean>	
	
	<bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	 <bean id="customUserDetailsService" class="com.o2r.service.CustomUserDetailsService"></bean>
    <bean id="sellerDao" class="com.o2r.dao.SellerDaoImpl"></bean>
     <bean id="sellerService" class="com.o2r.service.SellerServiceImpl"></bean>
     <bean id="helperClass" class="com.o2r.helper.HelperClass"></bean>
     
     <!-- schedular mapping START(4 payment) -->
     
     	<bean id="sampleJob" class="com.o2r.schedulers.SampleJob"></bean>     
	    <bean name="setTriggerJob" class="org.springframework.scheduling.quartz.JobDetailBean">
			<property name="jobClass" value="com.o2r.schedulers.SetTriggerJob" />		
			<property name="jobDataAsMap">
				<map>
					<entry key="sampleJob" value-ref="sampleJob" />
				</map>
			</property>		
		</bean>
		<!-- <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">		
			<property name="jobDetail" ref="setTriggerJob" />
			<property name="repeatInterval" value="50000" />
			<property name="startDelay" value="5000" />			
		</bean> -->	
		<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
			<property name="jobDetail" ref="setTriggerJob" />
			<property name="cronExpression" value="0 0 1 * * ?" />	
		</bean>			
		<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
			<property name="triggers">
				<list>
					<ref bean="cronTrigger" />
				</list>
			</property>
		</bean>
		
     <!-- Schedular mapping END -->
     <!-- schedular mapping START(4 product) -->  
        
        <bean name="setTriggerJobProductSL" class="org.springframework.scheduling.quartz.JobDetailBean">
			<property name="jobClass" value="com.o2r.schedulers.SetTriggerJobProductSL" />		
			<property name="jobDataAsMap">
				<map>
					<entry key="sampleJob" value-ref="sampleJob" />
				</map>
			</property>		
		</bean>
		<!-- <bean id="simpleTrigger1" class="org.springframework.scheduling.quartz.SimpleTriggerBean">		
			<property name="jobDetail" ref="setTriggerJobProductSL" />
			<property name="repeatInterval" value="50000" />
			<property name="startDelay" value="5000" />			
		</bean> -->
     	<bean id="cronTrigger1" class="org.springframework.scheduling.quartz.CronTriggerBean">
			<property name="jobDetail" ref="setTriggerJobProductSL" />
			<property name="cronExpression" value="0 0 1 1 * ?" />	
		</bean>	
		<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
			<property name="triggers">
				<list>
					<ref bean="cronTrigger1" />
					<!-- <ref bean="simpleTrigger1" /> -->
				</list>
			</property>
		</bean>
     	
     <!-- schedular mapping END -->
     
     
     
    <!-- <bean id="cStartEventHandler" class="com.o2r.schedulers.CStartEventHandler"/> -->
   
</beans>
